name: 'Terraform'

on:
    pull_request:
        branches:
            - dev

jobs:
    terraform-plan:
        name: 'Plan'
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: terraform
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Get branch information
              id: get-branch-info
              uses: tj-actions/branch-names@v6

            - name: Set TF_WORKSPACE variable (PR)
              if: github.event_name == 'pull_request'
              run: echo "TF_WORKSPACE=${{ steps.get-branch-info.outputs.base_ref_branch }}" >> $GITHUB_ENV

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

            - name: Terraform Format
              id: fmt
              run: terraform fmt -check

            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color -input=false -var="image_tag=${{ github.sha }}" -var="environment=${{ env.TF_WORKSPACE }}"
              continue-on-error: true

            - name: Update Pull Request
              uses: actions/github-script@v6
              env:
                  PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                      #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                      #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                      #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

                      <details><summary>Show Plan</summary>

                      \`\`\`\n
                      ${process.env.PLAN}
                      \`\`\`

                      </details>

                      *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Environment: \`${{ env.TF_WORKSPACE }}\`*`;

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: output
                      })

            - name: Terraform Plan Status
              if: steps.plan.outcome == 'failure'
              run: exit 1
